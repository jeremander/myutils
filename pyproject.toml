[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "myutils"
version = "1.1.0"
authors = [
    {name = "Jeremy Silver", email = "jeremys@nessiness.com"},
]
description = "Miscellaneous utilities and scripts"
readme = "README.md"
requires-python = ">=3.7"
license = {text = "BSD-3-Clause"}
dependencies = [
    "dill",  # pickling
    "humanize",  # natural time/size
    "matplotlib",  # plotting
    "networkx",  # graph theory
    "parsec",  # parsing
    "pydot",  # graph visualization
    "pytimeparse",  # parse time expressions
    "subprocess_tee",  # teed subprocesses
    "textract",  # extract text from various types
    "tqdm",  # progress bars
    "unidecode",  # normalize Unicode
]

[tool.setuptools]
include-package-data = true
packages = ["makepw"]
py-modules = ["docx2txt", "id_file_versions", "rust_deps", "ytsplit"]

[tool.setuptools.package-data]
makepw = ["mydict.json"]

[project.scripts]
docx2txt = "docx2txt:main"
id-file-versions = "id_file_versions:main"
makepw-strong = "makepw.makepw_strong:main"
makepw-xkcd = "makepw.makepw_xkcd:main"
rust-deps = "rust_deps:main"
ytsplit = "ytsplit:main"

[tool.mypy]
python_version = "3.11"
exclude = [
    "build",
    "makepw/old",
    "old",
    "venv"
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 10000

# rules to include
select = ["E", "F"]
extend-select = [
    "A",  # builtins
    "ANN",  # annotations
    "B",  # bugbear
    "C",  # mccabe (complexity)
    "C4",  # comprehensions
    "D",  # docstrings
    "I",  # isort (import order)
    "ICN",  # import conventions
    "PT",  # pytest style
    "PTH",  # pathlib
    "RET",  # return statements
    "RUF100",  # flag unused noqa
    "T10",  # debugger
    "UP",  # upgrades
]

# rules to ignore
ignore = [
    "ANN",
    "D",
    "PT018",
    "PTH123",
    "RET504",
    "RET505",
    "UP"
]

# paths to exclude
exclude = [
    ".venv",
    "makepw/old/",
    "old/",
    "param_sweep",
    "tmp*"
]

[tool.ruff.flake8-pytest-style]
parametrize-names-type = "list"

[tool.ruff.isort]
# don't separate straight-style and 'from' imports for the same module
force-sort-within-sections = true
# force imports to the top of their section
# force-to-top = ["package.utils"]
# patterns to separate into auxiliary blocks, in the order specified
# forced-separate = ["tests"]
# modules to consider first-party
# known-first-party = []
# number of lines after each import section
lines-after-imports = 2
# whether to order imports by type, rather than strictly alphabetically
order-by-type = true
